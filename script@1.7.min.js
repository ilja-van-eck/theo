function isMobile() {
    return window.innerWidth < 992
}
function resetWebflow(e) {
    let t = (new DOMParser).parseFromString(e.next.html, "text/html").querySelector("html").getAttribute("data-wf-page");
    document.documentElement.setAttribute("data-wf-page", t),
    window.Webflow.destroy(),
    window.Webflow.ready(),
    window.Webflow.require("ix2").init()
}
function initMotherPage() {
    const e = document.querySelector("#family-url")
      , t = document.querySelectorAll(".modal-close");
    if (e && t.length) {
        const r = e.getAttribute("href");
        t.forEach((e=>{
            e.setAttribute("href", r)
        }
        ))
    }
}
function initFamilyBottom(e) {
    e || (e = document);
    let t = document.querySelector("body");
    var r = parseInt(e.querySelector("[data-index]").textContent, 10);
    const o = e.querySelectorAll("[data-family-bottom] .slider-item")
      , a = o.length;
    var n = r - 1 < 1 ? a - 1 : r - 2
      , i = r % a;
    r - 1 < 1 && setTimeout((()=>{
        o[a - 1].style.order = 1
    }
    ), 150),
    0 === i && setTimeout((()=>{
        o[0].style.order = 3
    }
    ), 150),
    o.forEach(((e,t)=>{
        const r = t === n
          , o = t === i;
        if (r) {
            e.querySelectorAll(".button-text").forEach((e=>{
                e.textContent = "previous"
            }
            ))
        }
        (isMobile() ? o : r || o) ? (e.style.display = "block",
        e.style.order = 2) : e.remove()
    }
    ));
    let l = e.querySelector("[data-family-bottom]").querySelectorAll(".slider-item");
    function s(e) {
        let t;
        const r = !e.hasAttribute("data-video-url-mobile");
        t = window.innerWidth < 480 && !r ? e.getAttribute("data-video-url-mobile") : e.getAttribute("data-video-url"),
        t ? (e.src = t,
        e.setAttribute("muted", ""),
        e.setAttribute("playsinline", ""),
        e.setAttribute("autoplay", ""),
        e.load()) : console.log("No video source found for", r ? "main video" : "background video")
    }
    function c(e, t) {
        e.forEach((e=>{
            const t = e.target
              , r = t.querySelector(".bg-vid")
              , o = t.querySelector(".slide-vid");
            e.isIntersecting ? (r && r.play(),
            o && (o.currentTime = r.currentTime,
            o.play()),
            r && o && r.currentTime !== o.currentTime && (o.currentTime = r.currentTime)) : (r && r.pause(),
            o && (o.pause(),
            o.currentTime = r.currentTime))
        }
        ))
    }
    window.innerWidth < 992 && l.forEach((e=>{
        let t = e.querySelector(".bg-vid")
          , r = e.querySelector(".slide-vid");
        t && s(t),
        r && (s(r),
        r.currentTime = t.currentTime)
    }
    ));
    const u = {
        root: null,
        rootMargin: "0px",
        threshold: .5
    }
      , d = (e,t,r,o)=>{
        t && (m(t),
        r && r.currentTime && (t.currentTime = r.currentTime),
        t.volume = 0,
        t.play()),
        r && m(r, !1)
    }
    ;
    function m(e, t=!0, r=!1) {
        let o;
        o = r && window.innerWidth < 480 ? e.getAttribute("data-video-url-mobile") : e.getAttribute("data-video-url"),
        e && !e.src && o ? fetch(o).then((e=>{
            if (!e.ok)
                throw new Error(`HTTP error! status: ${e.status}`);
            return e.blob()
        }
        )).then((r=>{
            e.src = URL.createObjectURL(r),
            e.load(),
            t && e.play()
        }
        )).catch((e=>{
            console.warn("Video playback failed", e)
        }
        )) : (t && e.src,
        e.play())
    }
    l.forEach(((e,r)=>{
        const o = e.querySelector(".slide-vid")
          , a = e.querySelector(".bg-vid")
          , n = parseInt(e.querySelector("[data-score]").textContent, 10) - 1;
        t.classList.contains("no-hover") || window.innerWidth < 992 ? (()=>{
            const e = new IntersectionObserver(c,u);
            l.forEach((t=>e.observe(t)))
        }
        )() : (e.addEventListener("mouseenter", (()=>{
            document.querySelectorAll(".tl-item")[n].classList.add("active"),
            d(0, o, a),
            a.play(),
            o.currentTime = a.currentTime
        }
        )),
        e.addEventListener("mouseleave", (()=>{
            o && o.pause(),
            a && a.pause();
            document.querySelectorAll(".tl-item")[n].classList.remove("active")
        }
        ))),
        d(0, o, a)
    }
    )),
    window.innerWidth > 991 && gsap.delayedCall(.1, (()=>{
        const e = document.querySelector(".two-col");
        if (e) {
            if (e.children.length % 2 != 0) {
                const t = document.querySelector(".product-item.is--empty");
                t && (e.appendChild(t),
                t.classList.remove("u--hide"))
            }
        }
    }
    )),
    r = null,
    i = null,
    n = null
}
function removeFamilyNav() { let scoreWrap = document.querySelector(".tl-w"); if (scoreWrap && !isMobile) { scoreWrap.removeEventListener("mouseenter", showFamilySlider, false); } }

function makeItemActive() {
    const e = document.querySelector('[data-barba-namespace="family"] .f-hero .slider-title')
      , t = e ? e.textContent : ""
      , r = document.querySelectorAll("[data-home-slider] .slider-item");
    r && r.forEach((function(e) {
        const r = e.querySelector(".slider-title");
        (r ? r.textContent : "") === t && e.classList.add("is--transitioning")
    }
    ));
    const o = document.querySelectorAll("[data-family-bottom] .slider-item");
    o && o.forEach((function(e) {
        const r = e.querySelector(".slider-title");
        (r ? r.textContent : "") === t && e.classList.add("is--transitioning")
    }
    ))
}
function makeItemActiveTest(e, t) {
    const r = e.querySelector('[data-barba-namespace="family"] .f-hero .slider-title')
      , o = r ? r.textContent : ""
      , a = t.querySelectorAll("[data-family-bottom] .slider-item");
    a && a.forEach((function(e) {
        const t = e.querySelector(".slider-title");
        (t ? t.textContent : "") === o && e.classList.add("is--transitioning")
    }
    ))
}
function flip(e, t) {
    let r = Flip.getState(e.find(".slide-inner"))
      , o = e.find(".slide-inner");
    t.find(".slide-info__wrap").remove(),
    o.appendTo(t),
    Flip.from(r, {
        duration: 1,
        ease: "power4.inOut",
        absolute: !0
    })
}
function flipTest(e, t) {
    let r = Flip.getState(e.find(".slide-inner"))
      , o = e.find(".slide-inner");
    t.querySelector(".slide-info__wrap").remove(),
    o.appendTo(t),
    Flip.from(r, {
        duration: 1,
        ease: "power4.inOut",
        absolute: !0
    })
}
function runFamilyScroll(e) {
    let t = e.querySelector(".scroll-down")
      , r = t.querySelector(".scroll-down__bg")
      , o = t.querySelector(".scroll-down__text")
      , a = t.querySelector(".scroll-down__arrow")
      , n = t.querySelector(".scroll-down__arrow.is--mobile");
    if (gsap.set(t, {
        autoAlpha: 1
    }),
    isMobile()) {
        gsap.timeline({
            repeat: -1,
            repeatDelay: 2,
            delay: 1.5
        }).to(n, {
            y: "0.5rem",
            ease: "back.out(4)",
            duration: .5
        }).to(n, {
            y: "0rem",
            ease: "back.inOut(3)",
            duration: .5
        })
    } else {
        gsap.from(r, {
            scaleY: 0,
            duration: .6,
            ease: "power4.inOut"
        }),
        gsap.from([o, a], {
            autoAlpha: 0,
            y: "1rem",
            duration: .6,
            delay: .2,
            ease: "power4.inOut"
        }),
        gsap.timeline({
            repeat: -1,
            repeatDelay: 2,
            delay: 1.5
        }).to(a, {
            y: "0.5rem",
            ease: "back.out(4)",
            duration: .5
        }).to(a, {
            y: "0rem",
            ease: "back.inOut(3)",
            duration: .5
        })
    }
}
function runFamilyAfter() {
    let e = document.querySelector(".tl-line");
    gsap.to(e, {
        scaleX: 0,
        ease: "expo.out",
        duration: .5
    });
    let t = document.querySelector(".slide-vid__wrap");
    t && t.remove();
    let r = document.querySelector('[data-video="blur"]')
      , o = document.querySelector('[data-video="full"]')
      , a = document.querySelector("[data-image-blur]");
    o.currentTime = r.currentTime,
    gsap.set(o, {
        opacity: 1
    }),
    gsap.to(r, {
        opacity: 0,
        duration: .5,
        delay: 1,
        ease: "power3.inOut"
    }),
    gsap.to(a, {
        opacity: 0,
        duration: .001,
        delay: 1,
        ease: "power3.inOut"
    })
}
function runFamilyNavTransition() {
    document.querySelector(".family-nav").querySelectorAll(".bg-vid").forEach((e=>{
        e.pause()
    }
    )),
    currentTimeline && currentTimeline.reverse(),
    gsap.timeline({}).to(".family-nav", {
        height: "0px",
        ease: "power4.out",
        duration: 1.2
    }).to(".nav-bg", {
        height: "0%",
        overwrite: "height",
        ease: "power4.out",
        duration: 1
    }, 0).to(".nav-page__bg", {
        opacity: 0,
        duration: 1,
        ease: "power4.out"
    }).fromTo(".swiper-slide.is--family", {
        opacity: 1,
        yPercent: 0
    }, {
        opacity: 0,
        yPercent: 50,
        ease: "power4.out",
        duration: 1,
        stagger: {
            each: .02
        }
    }, 0)
}
barba.hooks.after((e=>{
    $(e.next.container).removeClass("fixed"),
    $(".is--transitioning").removeClass("is--transitioning"),
    $(".u--z-index-5").removeClass("u--z-index-5"),
    resetWebflow(e),
    lenis.scrollTo(0, {
        immediate: !0,
        force: !0,
        lock: !0,
        onComplete: ()=>{
            lenis.start(),
            ScrollTrigger.refresh()
        }
    })
}
)),
barba.hooks.leave((e=>{
    lenis.stop()
}
)),
barba.hooks.enter((e=>{
    $(e.next.container).addClass("fixed"),
    $(e.next.container).addClass("u--z-index-5")
}
)),
barba.init({
    debug: true,
    preventRunning: !0,
    prevent: function({el: e, event: t, href: r}) {
        return !(!e || !e.hasAttribute("data-barba-prevent")) || !(!t || "click" !== t.type || r !== window.location.href) && (t.preventDefault(),
        t.stopPropagation(),
        closeMainMenu(),
        !0)
    },
    transitions: [{
        name: "home-default",
        sync: !0,
        to: {
            namespace: ["play"]
        },
        afterEnter() {
            window.location.reload(),
            initHomeLoader()
        }
    }, {
        name: "stores-default",
        sync: !0,
        to: {
            namespace: ["stores"]
        },
        afterEnter() {
            window.location.reload()
        }
    }, {
        name: "family-to-family-nav",
        sync: !0,
        leave: e=>(navBoolean = !1,
        runFamilyNavTransition(),
        gsap.to(e.current.container, {
            opacity: 0,
            delay: .2,
            duration: 1
        })),
        enter(e) {
            gsap.from(e.next.container, {
                opacity: 0,
                duration: 1
            })
        },
        custom: ({trigger: e})=>e.classList.contains("family-slider__video")
    }, {
        name: "mother",
        sync: !0,
        to: {
            namespace: ["mother"]
        },
        afterEnter() {
            initMotherPage()
        }
    }, {
        name: "home-to-family",
        sync: !0,
        from: {
            namespace: ["play"]
        },
        to: {
            namespace: ["family"]
        },
        beforeEnter() {
            let e = document.querySelector('[data-video="full"]');
            gsap.set(e, {
                opacity: 0
            }),
            gsap.set(".slider-item", {
                pointerEvents: "none"
            }),
            gsap.set(".cursor-main", {
                autoAlpha: 0,
                overwrite: !0
            })
        },
        enter(e) {
            makeItemActive(),
            flip($(".is--transitioning"), $(".f-hero"));
            let t = e.next.container.querySelector(".f-hero")
              , r = t.querySelector(".button-filled.is--slide")
              , o = t.querySelector(".slide-vid__wrap")
              , a = document.querySelector(".cursor-w");
            return gsap.to(".cursor-img", {
                opacity: 0,
                scale: .6,
                stagger: .025,
                onComplete: ()=>{
                    a.remove()
                }
            }),
            gsap.to(".slide-bg__wrap", {
                xPercent: 0,
                overwrite: !0,
                duration: 1,
                ease: "power4.inOut"
            }),
            gsap.to(r, {
                yPercent: 50,
                opacity: 0,
                onComplete: ()=>{
                    gsap.set(r, {
                        display: "none"
                    })
                }
            }),
            gsap.to(o, {
                opacity: 0,
                duration: .2,
                ease: "power4.out"
            }),
            gsap.to('[data-video="full"]', {
                opacity: 1,
                delay: 1,
                duration: .2,
                ease: "power4.out"
            }),
            gsap.to(e.current.container, {
                opacity: 0,
                duration: 1.05,
                ease: "power4.out"
            })
        },
        after(e) {
            e.next.container;
            lenis.destroy(),
            lenis = new Lenis({
                lerp: .2,
                orientation: "vertical",
                gestureOrientation: "vertical"
            });
            document.querySelectorAll("[data-family-bottom] .slider-item").forEach((e=>{
                e.style.display = "block"
            }
            )),
            removeEventListeners(),
            runFamilyAfter(),
            gsap.set(".slider-item", {
                pointerEvents: "auto",
                clearProps: "all"
            })
        },
        afterEnter() {}
    }, {
        name: "family-to-home",
        sync: !0,
        from: {
            namespace: ["family"]
        },
        to: {
            namespace: ["play"]
        },
        enter: e=>(closeMainMenu(),
        gsap.to(e.current.container, {
            opacity: 0,
            duration: .5
        })),
        afterEnter() {
            initHomeLoader(),
            window.location.reload()
        }
    }, {
        name: "stores-to-home",
        sync: !0,
        from: {
            namespace: ["stores"]
        },
        to: {
            namespace: ["play"]
        },
        enter: e=>(closeMainMenu(),
        gsap.to(e.current.container, {
            opacity: 0,
            duration: .5
        })),
        afterEnter() {
            initHomeLoader()
        },
        after() {
            window.location.reload()
        }
    }, {
        name: "family-to-family-bottom",
        sync: !0,
        beforeEnter() {
            let e = document.querySelectorAll('[data-video="full"]');
            gsap.set(e, {
                opacity: 0
            }),
            gsap.set(".slider-item", {
                pointerEvents: "none"
            }),
            gsap.set(".cursor-main", {
                autoAlpha: 0,
                overwrite: !0
            })
        },
        enter(e) {
            makeItemActiveTest(e.next.container, e.current.container);
            let t = e.next.container.querySelector(".f-hero");
            flipTest($(".is--transitioning"), t);
            let r = e.next.container.querySelector(".f-hero")
              , o = r.querySelector(".button-filled.is--slide")
              , a = (r.querySelector(".slide-vid__wrap"),
            r.querySelector(".bottom-vid__wrap"));
            return gsap.to(".slide-bg__wrap", {
                xPercent: 0,
                overwrite: !0,
                duration: 1,
                ease: "power4.inOut"
            }),
            gsap.to(o, {
                yPercent: 50,
                opacity: 0,
                onComplete: ()=>{
                    gsap.set(o, {
                        display: "none"
                    })
                }
            }),
            gsap.to(a, {
                opacity: 0,
                duration: .2,
                ease: "power4.out"
            }),
            gsap.to('[data-video="full"]', {
                opacity: 1,
                delay: 1,
                duration: .2,
                ease: "power4.out"
            }),
            gsap.to(e.current.container, {
                opacity: 0,
                duration: 1.05,
                ease: "power4.out"
            })
        },
        after() {
            gsap.set(".slider-item", {
                pointerEvents: "auto",
                clearProps: "all"
            }),
            runFamilyAfter()
        },
        custom: ({trigger: e})=>e.hasAttribute("data-family-bottom-link")
    }, {
        name: "family-default",
        sync: !0,
        to: {
            namespace: ["family"]
        },
        afterEnter(e) {
            runFamilyAfter(),
            setTimeout(initFamilyBottom(e.next.container), 50)
        }
    }],
    views: [{
        namespace: "play",
        afterEnter() {
            initSlider(),
            removeFamilyNav()
        }
    }, {
        namespace: "family",
        afterEnter(e) {
            runFamilyScroll(e.next.container),
            initFamilyPage(e.next.container),
            runFamilyAfter(),
            setTimeout(initFamilyBottom(e.next.container), 50)
        }
    }, {
        namespace: "mother",
        afterEnter(e) {
            initMotherPage(),
            initFamilyPage(e.next.container)
        }
    }]
});
